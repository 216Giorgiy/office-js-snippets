id: excel_range_range_operations
name: Range operations
description: 'Bounding rect, intersection, offset and resized range'
author: Microsoft
host: EXCEL
api_set:
    ExcelApi: 1.1
script:
    content: "$(\"#setup\").click(setup);\n$(\"#bounding-rect\").click(boundingRect);\n$(\"#intersection\").click(intersection);\n$(\"#offset-range\").click(offsetRange);\n$(\"#resized-range\").click(resizedRange);\n\nasync function boundingRect() {\n\ttry {\n\t\tawait Excel.run(async (context) => {\n            const sheet = context.workbook.worksheets.getItem(\"Sample\");\n\n            const rangeA = sheet.getRange(\"B2:D5\");\n            const rangeB = sheet.getRange(\"D4:F8\");\n\n            const boundingRect = rangeA.getBoundingRect(rangeB);\n            boundingRect.format.fill.color = \"Blue\";\n            boundingRect.getCell(0, 0).values = [[\"Bounding Rect\"]];\n\n\t    \tawait context.sync();\n\t    });\n    }\n\tcatch (error) {\n\t\tOfficeHelpers.Utilities.log(error);\n\t}\n}\n\nasync function intersection() {\n\ttry {\n\t\tawait Excel.run(async (context) => {\n            const sheet = context.workbook.worksheets.getItem(\"Sample\");\n\n            const rangeA = sheet.getRange(\"B2:D5\");\n            const rangeB = sheet.getRange(\"D4:F8\");\n\n            const intersection = rangeA.getIntersection(rangeB);\n            intersection.format.fill.color = \"Blue\";\n            intersection.getCell(0, 0).values = [[\"Intersection\"]];\n\n\t    \tawait context.sync();\n\t    });\n    }\n\tcatch (error) {\n\t\tOfficeHelpers.Utilities.log(error);\n\t}\n}\n\nasync function offsetRange() {\n\ttry {\n\t\tawait Excel.run(async (context) => {\n            const sheet = context.workbook.worksheets.getItem(\"Sample\");\n\n            const rangeA = sheet.getRange(\"B2:D5\");\n\n            const offsetRange = rangeA.getOffsetRange(6, 3);\n            offsetRange.format.fill.color = \"Blue\";\n            offsetRange.getCell(0, 0).values = [[\"OffsetRange(6,3)\"]];\n\n\t    \tawait context.sync();\n\t    });\n    }\n\tcatch (error) {\n\t\tOfficeHelpers.Utilities.log(error);\n\t}\n}\n\nasync function resizedRange() {\n\ttry {\n\t\tawait Excel.run(async (context) => {\n            const sheet = context.workbook.worksheets.getItem(\"Sample\");\n\n            const rangeB = sheet.getRange(\"D4:F8\");\n\n            const resizedRange = rangeB.getResizedRange(2, -1);\n            resizedRange.format.fill.color = \"Blue\";\n            resizedRange.getCell(0, 0).values = [[\"ResizedRange(2,-1)\"]];\n\n\t    \tawait context.sync();\n\t    });\n    }\n\tcatch (error) {\n\t\tOfficeHelpers.Utilities.log(error);\n\t}\n}\n\nasync function setup() {\n\ttry {\n\t\tawait Excel.run(async (context) => {\n            const sheet = await OfficeHelpers.ExcelUtilities\n                .forceCreateSheet(context.workbook, \"Sample\");\n\n            const rangeA = sheet.getRange(\"B2:D5\");\n            rangeA.format.fill.color = \"green\";\n            rangeA.getCell(0, 0).values = [[\"Range A\"]];\n\n            const rangeB = sheet.getRange(\"D4:F8\");\n            rangeB.format.fill.color = \"yellow\";\n            rangeB.getCell(0, 0).values = [[\"Range B\"]];\n\n\t    \tsheet.activate();\n\t\t    await context.sync();\n\t    });\n    }\n\tcatch (error) {\n\t\tOfficeHelpers.Utilities.log(error);\n\t}\n}\n"
    language: typescript
template:
    content: |
        <section class="ms-font-m">
            <p>This sample shows how to do various operations on ranges, for example, getting the bounding rect of two ranges, using the Excel JavaScript API.</p>
        </section>

        <section class="setup ms-font-m">
            <h3>Set up</h3>
            <button id="setup" class="ms-Button">
                <span class="ms-Button-label">Add sample data</span>
            </button>
        </section>

        <section class="samples ms-font-m">
            <h3>Try it out</h3>
            <button id="bounding-rect" class="ms-Button">
                <span class="ms-Button-label">Bounding rect</span>
            </button>
            <button id="intersection" class="ms-Button">
                <span class="ms-Button-label">Intersection</span>
            </button>
            <button id="offset-range" class="ms-Button">
                <span class="ms-Button-label">Offset range</span>
            </button>
            <button id="resized-range" class="ms-Button">
                <span class="ms-Button-label">Resized range</span>
            </button>
        </section>
    language: html
style:
    content: "section.samples {\r\n    margin-top: 20px;\r\n}\r\n\r\nsection.samples .ms-Button, section.setup .ms-Button {\r\n    display: block;\r\n    margin-bottom: 5px;\r\n    margin-left: 20px;\r\n    min-width: 80px;\r\n}\r\n"
    language: css
libraries: |
    # Office.js
    https://appsforoffice.microsoft.com/lib/1/hosted/office.js

    # CSS Libraries
    office-ui-fabric-js@1.4.0/dist/css/fabric.min.css
    office-ui-fabric-js@1.4.0/dist/css/fabric.components.min.css

    # NPM libraries
    core-js@2.4.1/client/core.min.js
    @microsoft/office-js-helpers@0.6.0/dist/office.helpers.min.js
    jquery@3.1.1

    # IntelliSense: @types/library or node_modules paths or URL to d.ts files
    @types/office-js
    @types/core-js
    @microsoft/office-js-helpers/dist/office.helpers.d.ts
    @types/jquery
