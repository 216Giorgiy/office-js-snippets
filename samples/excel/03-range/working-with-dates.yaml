name: Working with dates
description: Setting and getting date values in a range and manipulating them using the Moment JavaScript library with the Moment-MSDate plug-in
host: EXCEL
api_set: {"ExcelApi":1.1}
script:
    content: "declare var moment: any;\n\n$(\"#setup\").click(setup);\n$(\"#set-date-value-using-timestamp\").click(setDateValueUsingTimestamp);\n$(\"#get-date-value\").click(getDateValue);\n\nasync function setDateValueUsingTimestamp() {\n    try {\n        await Excel.run(async (context) => {\n\n            const sheet = context.workbook.worksheets.getItem(\"Sample\");\n\n            const now = Date.now();\n            console.log(`set (timestamp): ${now}`);\n\n            const nowMoment = moment(now);\n            console.log(`set (moment): ${JSON.stringify(nowMoment)}`);\n\n            const nowMS = nowMoment.toOADate();\n            console.log(`set (MSDate): ${nowMS}`);\n\n            const dateRange = sheet.getRange(\"B4\");\n            dateRange.values = [[nowMS]];``\n            dateRange.numberFormat = [[\"[$-409]m/d/yy h:mm AM/PM;@\"]];\n\n            dateRange.format.autofitColumns();\n\n            await context.sync();\n        });\n    }\n    catch (error) {\n        OfficeHelpers.Utilities.log(error);\n    }\n}\n\nasync function getDateValue() {\n    try {\n        await Excel.run(async (context) => {\n\n            const sheet = context.workbook.worksheets.getItem(\"Sample\");\n\n            const dateRange = sheet.getRange(\"B3\");\n            dateRange.load(\"values\");\n\n            await context.sync();\n\n            const nowMS = dateRange.values[0][0];\n\n            console.log(`get (MSDate): ${nowMS}`);\n\n            const nowMoment = moment.fromOADate(nowMS);\n            console.log(`get (moment): ${JSON.stringify(nowMoment)}`);\n\n            const now = nowMoment.unix();\n            console.log(`get (timestamp): ${now}`)\n   \n        });\n    }\n    catch (error) {\n        OfficeHelpers.Utilities.log(error);\n    }\n}\n\nasync function setup() {\n\ttry {\n\t\tawait Excel.run(async (context) => {\n            const sheet = await OfficeHelpers.ExcelUtilities\n                .forceCreateSheet(context.workbook, \"Sample\");\n\n            const data = [\n                [\"Now\"],\n                [\"=NOW()\"]\n            ];\n\n            const dataRange = sheet.getRange(\"B2:B3\");\n            dataRange.formulas = data;\n\n            const headerRange = sheet.getRange(\"B2\");\n            headerRange.format.font.bold = true;\n\n            const dateRange = sheet.getRange(\"B3\");\n            dateRange.numberFormat = [[\"[$-409]m/d/yy h:mm AM/PM;@\"]];\n\n            dateRange.format.autofitColumns();\n\n\t    \tsheet.activate();\n\t\t    await context.sync();\n\t    });\n    }\n\tcatch (error) {\n\t\tOfficeHelpers.Utilities.log(error);\n\t}\n}\n"
    language: typescript
template:
    content: |
        <section class="ms-font-m">
            <p>This sample shows how to set and get date values in a range and manipulating them using the Moment JavaScript library with the Moment-MSDate plug-in.</p>
        </section>

        <section class="setup ms-font-m">
            <h3>Set up</h3>
            <button id="setup" class="ms-Button">
                <span class="ms-Button-label">Add sample data</span>
            </button>
        </section>

        <section class="samples ms-font-m">
            <h3>Try it out</h3>
            <button id="set-date-value-using-timestamp" class="ms-Button">
                <span class="ms-Button-label">Set date value using timestamp</span>
            </button>
            <button id="get-date-value" class="ms-Button">
                <span class="ms-Button-label">Get date value</span>
            </button>
        </section>
    language: html
style:
    content: "section.samples {\r\n    margin-top: 20px;\r\n}\r\n\r\nsection.samples .ms-Button, section.setup .ms-Button {\r\n    display: block;\r\n    margin-bottom: 5px;\r\n    margin-left: 20px;\r\n    min-width: 80px;\r\n}\r\n"
    language: css
libraries: |+
    # Office.js
    https://appsforoffice.microsoft.com/lib/1/hosted/office.js

    # CSS Libraries
    office-ui-fabric-js@1.4.0/dist/css/fabric.min.css
    office-ui-fabric-js@1.4.0/dist/css/fabric.components.min.css

    # NPM libraries
    core-js@2.4.1/client/core.min.js
    @microsoft/office-js-helpers@0.6.0/dist/office.helpers.min.js
    jquery@3.1.1
    moment@2.18.1
    moment-msdate@0.2.0

    # IntelliSense: @types/library or node_modules paths or URL to d.ts files
    @types/office-js
    @types/core-js
    @microsoft/office-js-helpers/dist/office.helpers.d.ts
    @types/jquery

