name: Selection Changed
description: Add and remove an event handler on the selection changed event
host: EXCEL
api_set: {"ExcelApi": 1.2}
script:
    content: "$(\"#add-event-handler\").click(addEventHandler);\n$(\"#remove-last-event-handler\").click(removeLastEventHandler);\n$(\"#remove-all-event-handlers\").click(removeAllEventHandlers);\n\nlet lastHandler: OfficeExtension.EventHandlerResult<Excel.Workbook>;\nlet workbook: Excel.Workbook;\n\nasync function addEventHandler() {\n\ttry {\n\t\tif (workbook === undefined) {\n\t\t\tawait Excel.run(addHandlerHelper);\n\t\t} else {\n\t\t\tawait Excel.run(workbook, addHandlerHelper);\n\t\t}\n\t\tconsole.log(\"Event handler added. Try changing the selection.\");\n\t}\n\tcatch (error) {\n\t\tOfficeHelpers.Utilities.log(error);\n\t}\n\t\n\tasync function addHandlerHelper(context: Excel.RequestContext) {\n\t\tworkbook = context.workbook;\n\t\tlastHandler = context.workbook.onSelectionChanged.add(onSelectionChanged)\n\n\t\tawait context.sync();\n\t}\n}\n\nasync function removeLastEventHandler() {\n    try {\n        await Excel.run(workbook, async (context) => {\n            lastHandler.remove();\n\n            await context.sync();\n\n            console.log(\"Last event handler removed\");\n        })\n    }\n    catch (error) {\n        OfficeHelpers.Utilities.log(error);\n    }\n}\n\nasync function removeAllEventHandlers() {\n    try {\n        await Excel.run(workbook, async (context) => {\n            context.workbook.onSelectionChanged.removeAll();\n\n            await context.sync();\n\n            console.log(\"All event handlers removed\");\n        })\n    }\n    catch (error) {\n        OfficeHelpers.Utilities.log(error);\n    }\n}\n\nasync function onSelectionChanged() {\n    \n    await Excel.run(workbook, async (context) => {\n        const range = context.workbook.getSelectedRange().load(\"address\");\n        \n        await context.sync();\n\n        console.log(`Selection changed to ${range.address}`);\n    });\n}\n"
    language: typescript
template:
    content: |
        <section class="ms-font-m">
            <p>This sample shows how to add and remove an event handler on the selection changed event using the Excel JavaScript API.</p>
        </section>

        <section class="samples ms-font-m">
            <h3>Try it out</h3>
            <button id="add-event-handler" class="ms-Button">
                <span class="ms-Button-label">Add event handler</span>
            </button>
            <button id="remove-last-event-handler" class="ms-Button">
                <span class="ms-Button-label">Remove last event handler</span>
            </button>
            <button id="remove-all-event-handlers" class="ms-Button">
                <span class="ms-Button-label">Remove all event handlers</span>
            </button>
        </section>
    language: html
style:
    content: "section.samples {\r\n    margin-top: 20px;\r\n}\r\n\r\nsection.samples .ms-Button, section.setup .ms-Button {\r\n    display: block;\r\n    margin-bottom: 5px;\r\n    margin-left: 20px;\r\n    min-width: 80px;\r\n}\r\n"
    language: css
libraries: |
    # Office.js
    https://appsforoffice.microsoft.com/lib/1/hosted/office.js

    # CSS Libraries
    office-ui-fabric-js@1.4.0/dist/css/fabric.min.css
    office-ui-fabric-js@1.4.0/dist/css/fabric.components.min.css

    # NPM libraries
    core-js@2.4.1/client/core.min.js
    @microsoft/office-js-helpers@0.6.0/dist/office.helpers.min.js
    jquery@3.1.1

    # IntelliSense: @types/library or node_modules paths or URL to d.ts files
    @types/office-js
    @types/core-js
    @microsoft/office-js-helpers/dist/office.helpers.d.ts
    @types/jquery
