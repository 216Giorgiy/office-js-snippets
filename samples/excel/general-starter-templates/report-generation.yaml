id: cixmek9l30003456vwg1q5snx
gist: ''
source: excel
author: Microsoft
name: Report Generation
description: Writes data to the workbook, applies basic formatting, and adds a chart bound to that data.
script:
  content: |-
    $('#load-data-and-create-chart').click(loadDataAndCreateChart);

    // Load some sample data into the worksheet and then create a chart
    function loadDataAndCreateChart() {
        // Run a batch operation against the Excel object model
        Excel.run(function (ctx) {

            // Create a proxy object for the active worksheet
            var sheet = ctx.workbook.worksheets.getActiveWorksheet();

            //Queue commands to set the report title in the worksheet
            sheet.getRange("A1").values = [["Quarterly Sales Report"]];
            sheet.getRange("A1").format.font.name = "Century";
            sheet.getRange("A1").format.font.size = 26;

            //Create an array containing sample data
            var values = [["Product", "Qtr1", "Qtr2", "Qtr3", "Qtr4"],
                            ["Frames", 5000, 7000, 6544, 4377],
                            ["Saddles", 400, 323, 276, 651],
                            ["Brake levers", 12000, 8766, 8456, 9812],
                            ["Chains", 1550, 1088, 692, 853],
                            ["Mirrors", 225, 600, 923, 544],
                            ["Spokes", 6005, 7634, 4589, 8765]];

            //Queue a command to write the sample data to the specified range
            //in the worksheet and bold the header row
            var range = sheet.getRange("A2:E8");
            range.values = values;
            sheet.getRange("A2:E2").format.font.bold = true;

            //Queue a command to add a new chart
            var chart = sheet.charts.add("ColumnClustered", range, "auto");

            //Queue commands to set the properties and format the chart
            chart.setPosition("G1", "L10");
            chart.title.text = "Quarterly sales chart";
            chart.legend.position = "right"
            chart.legend.format.fill.setSolidColor("white");
            chart.dataLabels.format.font.size = 15;
            chart.dataLabels.format.font.color = "black";
            var points = chart.series.getItemAt(0).points;
            points.getItemAt(0).format.fill.setSolidColor("pink");
            points.getItemAt(1).format.fill.setSolidColor('indigo');

            //Run the queued commands, and return a promise to indicate task completion
            return ctx.sync();
        })
        .then(function () {
            showNotification("Success", "Report-generation complete!");
        })
        .catch(function (error) {
            // Always be sure to catch any accumulated errors that bubble up from the Excel.run execution
            showNotification("Error", error);
            console.log("Error: " + error);
            if (error instanceof OfficeExtension.Error) {
                console.log("Debug info: " + JSON.stringify(error.debugInfo));
            }
        });
    }

    function handleError(error) {
        showNotification("Error", error);
        // Log additional information to the console, if applicable:
        if (error instanceof OfficeExtension.Error) {
            console.log("Debug info: " + JSON.stringify(error.debugInfo));
        }
    }

    function showNotification(header, text) {
        var container = document.getElementById('notification-popup');
        var headerPlaceholder = container.querySelector('.notification-popup-title');
        var textPlaceholder = container.querySelector('.ms-MessageBanner-clipper');

        headerPlaceholder.textContent = header;
        textPlaceholder.textContent = text;

        var closeButton = container.querySelector('.ms-MessageBanner-close');
        closeButton.addEventListener("click", function () {
            if (container.className.indexOf("hide") === -1) {
                container.className = "ms-MessageBanner is-hidden";
            }
            closeButton.removeEventListener("click", null);
        });

        container.className = "ms-MessageBanner is-expanded";
    }
  language: typescript
style:
  content: >-
    #content-header {
        background: #333;
        color: #fff;
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 80px; /* Fixed header height */
        padding: 10px 15px;
        box-sizing: border-box;
        overflow: hidden; /* Disable scrollbars for header */
    }


    #content-main {
        background: #fff;
        position: fixed;
        top: 80px; /* Same value as #content-header's height */
        left: 0;
        right: 0;
        bottom: 0;
        padding: 10px 15px;
        box-sizing: border-box;
        overflow: auto; /* Enable scrollbars within main content section */
    }


    /* Notification pane customizations, including overwriting some Fabric UI
    defaults */


    #notification-popup .notification-popup-title {
        text-align: left;
        margin: 15px 50px 0 15px;
    }


    #notification-popup.ms-MessageBanner {
        position: absolute;
        left: 0px;
        bottom: 0px;
        text-align: left;
        height: inherit;
    }


    #notification-popup.ms-MessageBanner, #notification-popup
    .ms-MessageBanner-text {
        min-width: inherit;
    }


    #notification-popup .ms-MessageBanner-text {
        margin: 0;
        padding: 18px 15px;
    }
  language: css
template:
  content: |-
    <div id="content-header" class="ms-font-m">
        <h1>Welcome</h1>
    </div>

    <div id="content-main" class="ms-font-m">
        <p>This sample shows how to load some sample data into the worksheet, and then create a chart using the Excel JavaScript API.</p>
        <br />
        <h3>Try it out</h3>
        <button class="ms-Button" id="load-data-and-create-chart">Click me!</button>
    </div>

    <div id="notification-popup" class="ms-MessageBanner is-hidden">
        <div class="notification-popup-title ms-fontSize-l ms-fontWeight-semibold"></div>
        <div class="ms-MessageBanner-content">
            <div class="ms-MessageBanner-text">
                <div class="ms-MessageBanner-clipper"></div>
            </div>
        </div>
        <button class="ms-MessageBanner-close">
            <i class="ms-Icon ms-Icon--x"></i>
        </button>
    </div>
  language: html
libraries: |-
  // Office.js
  https://appsforoffice.microsoft.com/lib/1/hosted/Office.js

  // NPM libraries
  jquery
  office-ui-fabric-js/dist/js/fabric.min.js
  office-ui-fabric-js/dist/css/fabric.min.css
  office-ui-fabric-js/dist/css/fabric.components.min.css
  @microsoft/office-js-helpers/dist/office.helpers.min.js
  core-js/client/core.min.js

  // IntelliSense: Use dt~library_name for DefinitelyTyped or URLs to d.ts files
  dt~office-js
  dt~jquery
  dt~core-js
  @microsoft/office-js-helpers/dist/office.helpers.d.ts
